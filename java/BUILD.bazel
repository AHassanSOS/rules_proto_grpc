
load("@//:rules.bzl", "proto_plugin")

proto_plugin(
    name = "java",
    outputs = [
        "{srcjar}",
    ],
    output_to_jar = True,
    visibility = ["//visibility:public"],
)

proto_plugin(
    name = "grpc_java",
    outputs = [
        "{srcjar}",
    ],
    output_to_jar = True,
    tool = ":protoc_gen_grpc_java",
    visibility = ["//visibility:public"],
)

genrule(
    name = "protoc_gen_grpc_java",
    srcs = select({
        ":darwin": ["@protoc_gen_grpc_java_macosx//file"],
        ":windows": ["@protoc_gen_grpc_java_windows_x86_64//file"],
        ":windows_msvc": ["@protoc_gen_grpc_java_windows_x86_64//file"],
        "//conditions:default": ["@protoc_gen_grpc_java_linux_x86_64//file"],
    }),
    outs = ["protoc_gen_grpc_java_bin"],
    cmd = " && ".join([
        "IN=$$(pwd)/$(SRCS)",
        "OUT=$$(pwd)/$@",
        "TMP=$$(mktemp -d $${TMPDIR:-/tmp}/genrule.XXXXXXXXXX)",
        "cd $$TMP",
        "cp $$IN $$OUT",
        "rm -rf $$TMP",
    ]),
    executable = True,
)

config_setting(
    name = "darwin",
    values = {"host_cpu": "darwin"},
    visibility = ["//visibility:private"],
)

config_setting(
    name = "windows",
    values = {"host_cpu": "x64_windows"},
    visibility = ["//visibility:private"],
)

config_setting(
    name = "windows_msvc",
    values = {"host_cpu": "x64_windows_msvc"},
    visibility = ["//visibility:private"],
)

